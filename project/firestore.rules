rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users Collection Rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Diary Entries Collection Rules
    match /diaryEntries/{docId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Community Posts Collection Rules
    match /communityPosts/{postId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    // Chats Collection Rules
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      
      // Messages Sub-collection Rules
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
    
    // Custom Tracks Collection Rules
    match /customTracks/{trackId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Redemption Requests Collection Rules
    match /redemptionRequests/{requestId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}